import "./chunk-LFBQMW2U.js";

// node_modules/pinia-plugin-persistedstate-2/dist/index.es.prod.mjs
function t(t2, e2, n2, r2) {
  return (e2 = e2.split ? e2.split(".") : e2.slice(0)).slice(0, -1).reduce(function(t3, e3) {
    return /^(__proto__|constructor|prototype)$/.test(e3) ? {} : t3[e3] = t3[e3] || {};
  }, t2)[e2.pop()] = n2, t2;
}
function e(t2, e2) {
  return null != t2 ? t2 : e2;
}
function n(t2, n2, r2, i) {
  return e(e(r2[n2], i[n2]), t2);
}
function r(e2) {
  var r2 = e2 || {};
  return function(e3) {
    var i = function() {
      try {
        return e3.options.persistedState || {};
      } catch (t2) {
        return {};
      }
    }();
    if (false !== n(true, "persist", i, r2)) {
      var o, s = n(e3.store.$id, "key", i, {}), c = n(false, "overwrite", i, r2), u = n(function() {
        try {
          return window.localStorage;
        } catch (t2) {
          return { getItem: function() {
          }, setItem: function() {
          }, removeItem: function() {
          } };
        }
      }(), "storage", i, r2), a = n(function() {
        return true;
      }, "filter", i, r2), f = n(JSON.stringify, "serialize", i, r2), l = n(JSON.parse, "deserialize", i, r2), p = n(function(t2) {
        return t2;
      }, "migrate", i, {}), d = n(function(t2, e4) {
        return e4;
      }, "merge", i, {}), m = n(function(t2) {
        var e4 = t2.setItem("@@", "1"), n2 = function() {
          t2.removeItem("@@");
        };
        e4 instanceof Promise ? e4.then(n2) : n2();
      }, "assertStorage", i, r2), v = new Promise(function(t2) {
        o = t2;
      }), h = 0;
      e3.store.$persistedState = { isReady: function() {
        return v;
      }, pending: false };
      try {
        if (true) {
          var y = m(u);
          y instanceof Promise ? y.then(function() {
            return $();
          }).catch(function(t2) {
            return console.warn(t2);
          }) : $();
        } else
          $();
      } catch (t2) {
        console.warn(t2), o();
      }
      e3.store.$subscribe(function(n2, r3) {
        if (false !== a(n2, r3)) {
          Array.isArray(i.includePaths) && (r3 = i.includePaths.reduce(function(e4, n3) {
            return t(e4, n3, function(t2, e5, n4) {
              return void 0 === (t2 = (e5.split ? e5.split(".") : e5).reduce(function(t3, e6) {
                return t3 && t3[e6];
              }, t2)) ? n4 : t2;
            }(r3, n3, void 0));
          }, {})), Array.isArray(i.excludePaths) && (r3 = l(f(r3)), i.excludePaths.forEach(function(e4) {
            return t(r3, e4, void 0);
          }, {}));
          var o2 = f(r3), c2 = u.setItem(s, o2);
          c2 instanceof Promise && (++h, e3.store.$persistedState.pending = 0 !== h, c2.catch(function() {
          }).finally(function() {
            --h, e3.store.$persistedState.pending = 0 !== h;
          }));
        }
      });
    }
    function g(t2) {
      (i.beforeHydrate || function() {
      })(e3.store.$state);
      var n2 = d(e3.store.$state, t2);
      c ? e3.store.$state = n2 : e3.store.$patch(n2), o();
    }
    function P(t2) {
      if (null != t2) {
        var e4 = l(t2), n2 = p(e4);
        n2 instanceof Promise ? n2.then(g) : g(n2);
      } else
        o();
    }
    function $() {
      var t2 = u.getItem(s);
      t2 instanceof Promise ? t2.then(P) : P(t2);
    }
  };
}
export {
  r as createPersistedStatePlugin
};
//# sourceMappingURL=pinia-plugin-persistedstate-2.js.map
